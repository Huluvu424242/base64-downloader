<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>


  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.3.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>


  <groupId>com.github.funthomas424242</groupId>
  <artifactId>base64-downloader</artifactId>
  <packaging>jar</packaging>
  <version>1.0.0-SNAPSHOT</version>
  <name>base64-downloader</name>
  <url>http://maven.apache.org</url>


  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
    <java.version>1.8</java.version>
    <!-- if not detect docker.d process, skip docker -->
    <docker.skip>true</docker.skip>
  </properties>

  <prerequisites>
    <maven>3.6.0</maven>
  </prerequisites>

  <dependencyManagement>
    <dependencies>
      <!--<groupId>com.google.guava</groupId>-->
      <!--<artifactId>guava</artifactId>-->
      <!--<version>27.0.1-jre</version>-->
      <!--</dependency>-->
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>


    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.26</version>
      <scope>compile</scope>
    </dependency>
    <!-- Logging -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.13</version>
      <scope>compile</scope>
    </dependency>


    <!-- Objektfunktionales Paradigma -->
    <dependency>
      <groupId>io.vavr</groupId>
      <artifactId>vavr</artifactId>
      <version>1.0.0-alpha-2</version>
      <scope>compile</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.12</version>
    </dependency>


    <!-- APIs von denen die Generate abhängen -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>2.0.1.Final</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.bval</groupId>
      <artifactId>bval-jsr</artifactId>
      <version>2.0.0</version>
      <scope>compile</scope>
    </dependency>


    <!-- Test Abhängigkeiten -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.4.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit5-api</artifactId>
      <version>0.9.3</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <rulesUri>file:///${project.basedir}/etc/version-rules.xml</rulesUri>
        </configuration>
        <executions>
          <execution>
            <id>show-dep-updates</id>
            <phase>
              validate
            </phase>
            <goals>
              <goal>display-dependency-updates</goal>
            </goals>
          </execution>
          <execution>
            <id>show-plugin-updates</id>
            <phase>
              validate
            </phase>
            <goals>
              <goal>display-plugin-updates</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${pom.basedir}/src/main/jib/app</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <version>${project.version}</version>
                  <type>jar</type>
                  <!--<classifier> [classifier - optional] </classifier>-->
                  <overWrite>true</overWrite>
                  <outputDirectory>src/main/jib/app/classes</outputDirectory>
                  <!--<destFileName>[ filename ]</destFileName>-->
                </artifactItem>
              </artifactItems>
              <!-- other configurations here -->
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>1.0.1</version>
        <configuration>
          <container>
            <jvmFlags>
              <jvmFlag>-Xms512m</jvmFlag>
              <jvmFlag>-Xdebug</jvmFlag>
              <!--<jvmFlag>-Xmy:flag=jib-rules</jvmFlag>-->
            </jvmFlags>
            <ports>
              <port>8080</port>
              <!--<port>8000</port>-->
              <!--<port>4200</port>-->
            </ports>
            <mainClass>org.springframework.boot.loader.JarLauncher</mainClass>
            <!--<entrypoint>top,-b</entrypoint>-->
          </container>
        </configuration>
        <executions>
          <execution>
            <id>install</id>
            <phase>install</phase>
            <goals>
              <goal>build</goal>
            </goals>
            <configuration>
              <to>
                <image>registry.hub.docker.com/funthomas424242/${project.artifactId}</image>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
              </to>
            </configuration>
          </execution>
          <execution>
            <id>package</id>
            <phase>package</phase>
            <goals>
              <goal>dockerBuild</goal>
            </goals>
            <configuration>
              <skip>${docker.skip}</skip>
              <from>
                <image>openjdk:alpine</image>
              </from>
              <to>
                <image>myimage</image>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
              </to>
              <container>
                <format>OCI</format>
              </container>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <organization>
    <name>PIUG</name>
    <url>https://piug.slack.com</url>
  </organization>


  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <reportSets>
          <reportSet>
            <configuration>
              <skip>true</skip>
            </configuration>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>


  <profiles>
    <profile>
      <id>debug</id>
      <build>
        <defaultGoal>spring-boot:run</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <jvmArguments>
                -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
              </jvmArguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>enableDocker-linux</id>
      <properties>
        <docker.skip>false</docker.skip>
      </properties>
      <activation>
        <!-- Activate on Linux systems. Assume presence of docker.pid file indicates Docker is available -->
        <file>
          <exists>/var/run/docker.pid</exists>
        </file>
      </activation>
    </profile>
  </profiles>

</project>
